#20.04.2024 15:32 (2(20.04.2024))
print('x,y,z,w')
for w in 0,1:
     for x in 0,1:
          for y in 0,1:
               for z in 0,1:
                    f = (not(w <= x)) or ((not z) <= (not y)) or z
                    if f == 0:
                         print(x,y,z,w)
#12.03.2024 14:07 (2(lvl2))
print('x,y,w,z')
for x in 0,1:
     for y in 0,1:
          for w in 0,1:
               for z in 0,1:
                    if ((x<=y)and(y<=w)or(z==(x or y)))==0:
                         print(x,y,w,z)
#12.03.2024 14:17 (2(lvl2.1))
print('x,y,w,z')
for x in 0,1:
     for y in 0,1:
          for w in 0,1:
               for z in 0,1:
                    if ((w and y)or((x<=w)==(y<=z)))==0:
                         print(x,y,w,z)
#12.03.2024 14:58 (2(lvl2.2))
print('x,y,w,z')
for x in 0,1:
     for y in 0,1:
          for w in 0,1:
               for z in 0,1:
                    if (((not(y<=w))<=(x<=z))<=(x<=w))==0:
                         print(x,y,w,z)
#12.03.2024 15:01 (2(lvl2.3))
print('x,y,w,z')
for x in 0,1:
     for y in 0,1:
          for w in 0,1:
               for z in 0,1:
                    if ((x and(y or not(z))and w)==(x <= (not(y and z))))==1:
                         print(x,y,w,z)
#20.04.2024 16:00 (2.4832)
def f(x,y):
     if x == y:
          return 1
     if x > y:
          return 0
     return f(x+1,y)+f(x*2,y)
print(f(1,16))
#12.03.2024 13:26 (2)
print('xywz')
for x in 0,1:
     for y in 0,1:
          for w in 0,1:
               for z in 0,1:
                    if (not ((x==y)or(x==w))or z or not(y<=w))==0:
                         print(x,y,w,z)
#26.02.2024 22:34 (5(26.02.2024))
lst = []
for n in range(250):
     b = bin(n)[2:]
     b = b + '0' if n % 2 == 0 else b + '1'
     b = '11'+ b[2:] if b.count('1')%3 == 0 else '10' + b[2:]
     r = int(b,2)
     if r >= 26:
          lst.append(n)
print(min(lst))
#23.01.2024 18:03 (5)
for i in range(9999, 1000, -1):
    s = str(i)
    k1 = int(s[0]) + int(s[1])
    k2 = int(s[1]) + int(s[2])
    k3 = int(s[2]) + int(s[3])
    first = str(k1 + k2 + k3 - max(k1, k2, k3) - min(k1, k2, k3))
    second = str(min(k1, k2, k3))
    s1 = first + second
    if s1 == '1512':
        print(i)
#11.04.2024 19:07 (6.2)
import turtle as t
t.screensize(3500,3500,"white") #экран
t.left(0) #поворот фигуры
t.speed(300) #скорость
scale = 10 #размер
t.down()

t.right(90)
for x in range(1,100):
     for y in range(11): #Повторы
          t.forward(3 * scale) #размер фигуры
          t.forward(4)
          t.right(60)
     t.up()
     t.color("green")
     for i in range(-9,11):
          for j in range(-10,11):
               t.goto(i * scale, j * scale) 
               t.dot(3)
t.done()
#11.04.2024 17:46 (6)
import turtle as t
t.screensize(3500,3500,"white")
t.left(90)
t.speed(300)
scale = 15
t.down()

t.right(90)
for m in range (1,1000):
  for n in range(8):
    t.forward(6*scale)
    t.right(120)
  t.up()
  t.color("green")
  for i in range(-10,11):
    for k in range(-11,11):
      t.goto(i*scale,k*scale)
      t.dot(3)
t.done()
#03.07.2024 20:17 (6a)
import turtle as t

t.tracer(0)
t.screensize(3500,3500,"white")
t.left(90)
scale = 40

for k in range(2):
  t.forward(13 * scale)
  t.right(90)
  t.forward(18 * scale)
  t.right(90)
t.up()
t.forward(5 * scale)
t.right(90)
t.forward(9 * scale)
t.left(90)
t.down()
for k in range(2):
  t.forward(11 * scale)
  t.right(90)
  t.forward(7 * scale)
  t.right(90)
t.up()

for x in range(-50,80):
  for y in range(-50,80):
    t.goto(x * scale, y * scale)
    t.dot(5, "orange")
t.done()
#11.04.2024 18:02 (6ю1)
import turtle as t
t.screensize(3000,3000,"white")
t.left(90)
t.speed(300)
scale = 1
t.down()

t.right(90)
for S in range(1,1000):
  for k in range(6):
    t.right(36)
    t.forward(10)
    t.right(36)
  t.up()
  t.color("green")
  for i in range(-10,11):
       for j in range(-11,11):
            t.goto(i*scale,j*scale)
            t.dot(3)
t.done()
#23.04.2024 18:25 (8 2024)
alph = 'MAK'
counter = 0
for a1 in 'MAK':
     for a2 in 'MAK':
          for a3 in 'MAK':
               for a4 in 'MAK':
                    for a5 in 'MAK':
                         for a6 in 'MAK':
                              word = a1 + a2 + a3 + a4 + a5 + a6
                              if word.count('M')==1:
                                   counter += 1
print(counter)
#23.04.2024 21:26 (8.4.2024)
s = '012345678'
count = 0
for a in '12345678':
    for b in s:
        for c in s:
             for d in s:
                 for e in s:
                      for f in s:
                          r = a + b + c + d + e + f
                          if r.count('1') <= 1 and r.count('0') <= 1 and r.count('2') <= 1 and \
                             r.count('3') <= 1 and r.count('4') <= 1 and r.count('5') < 1 and \
                             r.count('6') <= 1 and r.count('7') <= 1 and \
                             r.count('00') == r.count('22') == r.count('44') == r.count('66') == 0 and \
                             r.count('02') == r.count('20') == r.count('04') == r.count('40') == 0 and \
                             r.count('06') == r.count('60') == r.count('24') == r.count('42') == 0 and \
                             r.count('46') == r.count('64') == r.count('26') == r.count('62') == 0 and \
                             r.count('33') == r.count('55') == r.count('77') == r.count('35') == 0 and \
                             r.count('53') == r.count('37') == r.count('73') == r.count('57') == 0 and \
                             r.count('75') == 0:
                              count += 1
print(count)
#23.04.2024 20:10 (8.9)
import itertools
alphabet = "ВЕРЕТЕНО"
ar = itertools.product(alphabet, repeat=6) #Размещение с повторением
arl = []
for i in ar:
    arl.append(list(i))
count = 0
for e in arl:
    if e[0] != "В":
        count += 1
print(count)
#26.02.2024 22:54 (12)
s = '>' + '1'*25 + '2'*17 + '3'*10

while '>1' in s or '>2' in s or '>3' in s:
     if '>1' in s:
          s = s.replace('>1','22>3',1)
     if '>2' in s:
          s = s.replace('>2','2>',1)
     if '>3' in s:
          s = s.replace('>3','11>2',1)
print(s.count('1')*1+s.count('2')*2+s.count('3')*3)
#29.04.2024 22:54 (14 (NEW))
x = 4 * 3125**2019 + 3 * 625**2020 - 2 * 125**2021 + 25**2022 - 4 * 5**2023 - 2024
a = []

while x > 0:
     a = a + [x%25]
     x //= 25
print(a.count(10))
#29.02.2024 20:22 (15(13082))
def f(x,y):
    return (3*x+y>48)or(x>y)or(4*x+y<A)

for A in range(1,100):
    if any(f(x,y)==0 for x in range(1,100) for y in range(1,100)): #не равно 0 - ложь, иначе истинна
        print(A)
print('Ответ: 60')
#18.04.2024 18:53 (15(Stepik 18.04.2024))
def check(A):
     for x in range(1,1000):
          for y in range(1,1000):
               f = (y + 2*x <= 27) <= ((y - x > 3) or (y <= A))
               if f != 1:
                    return 0
     return 1

for A in range(1,1000):
     if check(A) == 1:
          print(A)
          break
#20.04.2024 14:27 (15.3834)
def check(A):
     for x in range(1,1000):
          f = (x % 7 == 0) <= (x % 21 != 0) or (2*x + A >= 120)
          if f != 1:
               return 0
     return 1

for A in range(1,1000):
     if check(A) == 1:
          print(A)
          break
#20.06.2024 22:21 (20)
def f(x, y, step=0): 
    if (x + y) >= 75 and step == 4: 
        return True 
    elif (x + y) < 75 and step < 4:
        if step % 2 == 0: 
            return f(x + 1, y, step + 1) or f(x, y + 1, step + 1) or f(x * 3, y, step + 1) or f(x, y * 3, step + 1)
        else: 
            return f(x + 1, y, step + 1) and f(x, y + 1, step + 1) and f(x * 3, y, step + 1) and f(x, y * 3, step + 1)
    else:
         return False

for s in range(1, 75): 
    if f(6, s): 
        print(s)
#21.06.2024 23:26 (21.06.2024)
"""
def f(x,y):
     if x > y:
          return 0
     if x == y:
          return 1
     return f(x+1,y) + f(x*2,y) + f(2*x+1,y) + f(x*10,y)
print(f(1,15))
"""
"""
def f(x,y):
     if x>y:
          return 0
     if x == y:
          return 1
     return f(x*2,y) + f(x*3,y)
print(f(8,96)*f(96,3456))
"""
"""
def f(x,y):
     if x>y or x==11 or x==12:
          return 0
     if x == y:
          return 1
     return f(x+1,y) + f(x*2,y) + f(x**2,y)
print(f(2,10)*f(10,40))
"""
"""
def f(x,y):
     if x > y or x == 17:
          return 0
     if x == y:
          return 1
     return f(x+1,y) + f(x*2,y)
print(f(1,10)*f(10,35))
"""
"""
def f(x,y):
     if x > y:
          return 0
     if x == y:
          return 1
     return f(x+2,y) + f(x*2,y)
print(f(1,16)*f(16,52))
"""
"""
def f(x,y):
     if x > y or x == 12:
          return 0
     if x == y:
          return 1
     return f(x+1,y) + f(x+2,y) + f(x*3,y)
print(f(2,9)*f(9,19))
"""
"""
def f(x,y):
     if x < y:
          return 0
     if x == y:
          return 1
     return f(x-1,y) + f(x//2,y)
print(f(30,12)*f(12,1))
"""
"""
def f(x,y):
     if x < y:
          return 0
     if x == y:
          return 1
     return f(x-2,y) + f(x//2,y)
print(f(28,10)*f(10,1))
"""
"""
def f(x,y):
     if x > y or x == 15:
          return 0
     if x == y:
          return 1
     return f(x+1,y) + f(x*2,y)
print(f(2,12)*f(12,32))
"""
"""
def f(x,y):
     if x > y:
          return 0
     if x == y:
          return 1
     return f(x+1,y) + f(x*2,y)
print(f(2,7)*f(7,16)*f(16,39))
"""
"""
def f(x,y):
     if x > y:
          return 0
     if x == y:
          return 1
     return f(x+3,y) + f(x*2,y)
print(f(3,27)*f(27,63))
"""
"""
def f(x,y):
     if x > y or x == 16:
          return 0
     if x == y:
          return 1
     return f(x+1,y) + f(x+3,y) + f(x**2,y)
print(f(3,20)*f(20,26))
"""
"""
def f(x,y):
     if x < y:
          return 0
     if x == y:
          return 1
     return f(x-3,y) + f(x-1,y)
print(f(34,25)*f(25,22)*f(22,18))
"""
#20.04.2024 16:52 (23.3069)
def f(x,y):
     if x == y:
          return 1
     if x > y:
          return 0
     return f(x+1,y)+f(x+3,y)+f(x+6,y)
print(f(21,30))
#18.01.2024 22:39 (32)
def f(x,y):
     if x == y:
          return 1
     if x > y:
          return 0
     return f(x+1,y)+f(x+2,y)
print(f(1,7)*f(7,13))
#24.01.2024 22:50 (55)
print(2024%2)
#19.05.2024 0:30 (167)
with open("Text/1777.txt", "r") as f:
     data = [int(line) for line in f.readlines()]

min6 = 10**10
for elem in data:
  if abs(elem) % 10 == 6 and elem < min6:
    min6 = elem
k = 0
maxsum = 0
for i in range(len(data) - 1):
     if (abs(data[i]) % 10 == 6 and abs(data[i + 1]) % 10 != 6) or (abs(data[i]) % 10 != 6 and abs(data[i + 1]) % 10 == 6):
          if (data[i]**2 + data[i+1]**2) < min6**2:
               k += 1
               maxsum = max(maxsum, data[i]**2 + data[i+1]**2)
#23.01.2024 22:01 (321)
for n in range(1, 100):
    b = bin(n)[2:]  
    b = str(b)
    if b.count('1') > b.count('0'):
        b += '1'
    else:
        b += '0'
    r = int(b, 2) 
    if r > 85:
        print(r)
        break
#25.01.2024 22:14 (3213)
a = []
for n in range(101):
     b = bin(n)[2::]
     k = ' '
     for symbol in b:
          if symbol=='1' and symbol > '0':
               k = k+'1'
          else:

               if (symbol=='0' and symbol>'1') or (symbol=='0' and symbol=='1'):
                    k = k+'0'
     r = int(k,2)
     if r < 100:
          a.append(n)
print(max(a))
#23.01.2024 21:20 (4343)
n = int((input())
r = bin(n)[2::]
r = b + str(b.count('1')%3)
print(b)        
r = int(r,2)
#02.04.2024 22:49 (12333)
for x in '0123456789ABCDE':
     f = int(f'123{x}5',15)+int(f'1{x}233',15)
     if f % 14 == 0:
          print(f//14)
          break
#01.07.2024 10:12 (01072024)
"""
Номер 2
"""
"""
print('x,y,z')
for x in 0,1:
     for y in 0,1:
          for z in 0,1:
               f = ((not (x)) and y and z) or ((not (x)) and (not (z)))
               if f == 1:
                    print(x,y,z)
"""

"""
Номер 5
"""
"""
lst = []
for n in range(1,10000):
     b = bin(n) [2:]
     if b.count('1') % 2 == 0:
          b = b + '1'
     else:
          b = b + '0'
     if int(b,2) % 2 == 0:
          b = b + '10'
     else:
          b = b + '01'
     r = int(b, 2)
     if r < 1000:
          print(n,r)

"""
"""
Номер 8
"""

"""
from itertools import product

k = 0

for i in product(sorted('ЛЕМУР'),repeat=4):
     s = ''.join(i)
     if 'Л' in s[0]:
          k += 1
print(k)
"""

"""
Номер 14
"""

"""
for x in '0123456789ABCDF':
     a = (f'97968{x}13', 15)
     b = (f'7{x}213', 15)
     c = a + b
     if c % 14 == 0:
          print(c // 14)
"""

"""
Номер 16
"""

"""

def f(n):
     if n > 100000:
          return n
     if n <= 100000:
          return f(n+1) + 5*n + 2
print(f(3)-f(7))
"""

"""
Номер 23
"""

"""
def f(x,y):
     if x > y:
          return 0
     if x == y:
          return 1
     return f(x+1,y) + f(x+3,y) + f(x*3,y)
print(f(3,9)*f(9,27)*f(27,31))
"""

"""
Номер 25
"""

"""
from fnmatch import *

k = 0

for i in range(27, 10**8, 27):
     if fnmatch (str(i), '123*890'):
          print(i, i//27)
"""
#02.07.2024 16:24 (02072024)
"""
print('x,y,w,z')
for x in 0,1:
     for y in 0,1:
          for w in 0,1:
               for z in 0,1:
                    f = (not(y <= (x == w))) and (z <= x)
                    if f == 1:
                         print(x,y,w,z)
"""
"""
for n in range(1,1000):
     b = bin(n) [2:]
     if n % 2 != 0:
          b = b + '0'
     else:
          b = '1' + b
     if b.count('1') % 2 == 0:
          b = b + '1'
     else:
          b = b + '0'
     r = int(b,2)
     if r > 228:
          print(n)
          break

"""

"""
import turtle as t

t.tracer(0)
t.screensize(3500,3500,"white")
t.left(90)
scale = 15

for k in range(23):
     t.forward(50 * scale)
     t.right(90)
t.up()
t.forward(10 * scale)
t.right(90)
t.forward(20 * scale)
t.down()
for k in range(34):
     t.forward(40 * scale)
     t.left(90)
t.up()

for x in range(-50,70):
     for y in range(-50,70):
          t.goto(x * scale, y * scale)
          t.dot(3, "orange")
t.done()
"""
"""
from itertools import permutations

for i in permutations('01234567',r=5):
     s = ''.join(i)
     if s.count('6') == 1 and '1' not in s[6] and '3' not in s[6] and '5' not in s[6] and '7' not in s[6]:
          print(i)
"""
"""
for n in range(4,10000):
     s = '5' + '2' * n
     while '52' in s or '2222' in s or '1122' in s:
          if '52' in s:
               s = s.replace('52','11',1)
          if '2222' in s:
               s = s.replace('2222','5',1)
          if '1122' in s:
               s = s.replace('1122','25',1)
     su = sum(map(int, s))
     if su == 64:
          print(n)
"""

"""
print(f'{130:08b}',f'{140:08b}',f'{241:08b}',f'{137:08b}')
print(f'{130:08b}',f'{140:08b}',f'{240:08b}',f'{0:08b}')
a = '10000010 10001100 11110000 00000000'
print(a.count('1'))
"""

"""
a = 6 * 343**1156 - 5*49**1147 + 4*7**1153 - 875
k = []
while a > 0:
     k.append(a % 7)
     a //= 7
print(sum(k))
"""

"""
for x in range(1,52):
     return ((x % 34 == 0) and (not(x % 51 == 0))) <= (x % A
"""
"""
def f(n):
     if n >= 2020:
          return n
     if n < 2020:
          return n + 2 + f(n + 3)
print(f(2012)-f(2023))
"""
"""
def f(x,y,step=0):
     if (x+y) >= 75 and step == 2:
          return True
     if (x+y) < 75 and step < 2:
          return f(x+3,y,step+1) or f(x*2,y,step+1) or f(x,y+3,step+1) or f(x,y*2,step+1)
     else:
          return False

for s in range(1,64):
     if f(10,s):
          print(s)
          break
"""
"""
def f(x,y,step=0):
     if (x+y) >= 75 and step == 3:
          return True
     if (x+y) < 75 and step < 3:
          if step % 2 == 0:
               return f(x+3,y,step+1) or f(x*2,y,step+1) or f(x,y+3,step+1) or f(x,y*2,step+1)
          else:
               return f(x+3,y,step+1) and f(x*2,y,step+1) and f(x,y+3,step+1) and f(x,y*2,step+1)
     else:
          return False

for s in range(1,64):
     if f(10,s):
          print(s)
"""
"""
def f(x,y,step=0):
     if (x+y) >= 75 and step in {2,4}:
          return True
     if (x+y) < 75 and step < 4:
          if step % 2 != 0:
               return f(x+3,y,step+1) or f(x*2,y,step+1) or f(x,y+3,step+1) or f(x,y*2,step+1)
          else:
               return f(x+3,y,step+1) and f(x*2,y,step+1) and f(x,y+3,step+1) and f(x,y*2,step+1)
     else:
          return False

for s in range(1,64):
     if f(10,s):
          print(s)
          break
"""
"""
def f(x,y):
     if x > y or x == 20:
          return 0
     if x == y:
          return 1
     return f(x+1,y) + f(x*2,y)
print(f(1,10)*f(10,40))
"""

"""
from fnmatch import *

for i in range(151, 10**9, 151):
     if fnmatch(str(i), '2?34?56?8'):
          print(i, i//151)
"""

"""
from ipaddress import *
ip = ip_address('130.140.241.137')
net = ip_address('130.140.240.0')
for mask in range(33):
   network = ip_network(f'{ip}/{mask}', 0)
   if network.network_address == net:
       print(mask)
"""
#05.06.2024 0:04 (2562024)
"""
print('w,x,y,z')
for w in 0,1:
     for x in 0,1:
          for y in 0,1:
               for z in 0,1:
                    f = x and (y <= z) and ((not y) <= ((not z) == w))
                    if f != 1:
                         print(w,x,y,z)
"""
"""
import turtle as t

t.tracer(0)
t.screensize(3500,3500,"white")
t.left(90)
t.speed(300)
scale = 40

for k in range(16):
     t.left(36)
     t.forward(4 * scale)
     t.left(36)
t.up()

for x in range(-10, 50):
     for y in range(-10, 40):
          t.goto(x * scale, y * scale)
          t.dot(4)
t.done()
"""
"""
import turtle as t

t.tracer(0)
t.screensize(3500,3500,"white")
t.left(90)
t.speed(300)
scale = 20

for k in range(6):
     t.forward(25 * scale)
     t.right(120)
t.up()
t.forward(20 * scale)
t.left(90)
t.backward(5 * scale)
t.down()
for k in range(2):
     t.forward(20 * scale)
     t.left(90)
     t.forward(10 * scale)
     t.left(90)
t.up()

for x in range(-30, 50):
     for y in range(-10,40):
          t.goto(x * scale, y * scale)
          t.dot(3)
t.done()
"""
#12.06.2024 22:09 (1262024)
"""
print('x,y,w,z')
for x in 0,1:
     for y in 0,1:
          for w in 0,1:
               for z in 0,1:
                    f = not(w <= (not(x <= y))) and (not(x) <= ((not y) == z))
                    if f == 1:
                         print(x,y,w,z)
"""
s = '3' * 100
while '111' in s or '333' in s:
     if '111' in s:
          s = s.replace('111','3',1)
     else:
          s =  s.replace('333','1',1)
print(s)
#15.06.2024 22:40 (1562024)
"""
print('x,y,w,z')
for x in 0,1:
     for y in 0,1:
          for w in 0,1:
               for z in 0,1:
                    f = ((x == (not y)) or (x == (not z))) and w and (y <= z)
                    if f ==1:
                         print(x,y,w,z)
"""
print('w,x,y,z')
for w in 0,1:
     for x in 0,1:
          for y in 0,1:
               for z in 0,1:
                    f = (not(w == y)) and (z <= w) and (not x)
                    if f == 1:
                         print(w,x,y,z)
#17.06.2024 17:29 (1762024)
"""
print('x,y,w,z')
for x in 0,1:
     for y in 0,1:
          for w in 0,1:
               for z in 0,1:
                    f = not(x <= w) or (y <= z) or (not y)
                    if f == 0:
                         print(x,y,w,z)
"""
"""
for n in range(1,100):
     b = bin(n) [2:]
     if b.count('1') % 2 == 0:
          b = '10' + b[2:] + '0'
     else:
          b = '11' + b[2:] + '1'
     r = int(b,2)
     if r > 50:
          print(n, r)
          break
#Значения в кодах if и else отличаются.
"""
"""
import turtle as t

t.tracer(0)
t.screensize(3500,3500,"white")
t.left(90)
t.speed(300)
scale = 30

for k in range(9):
     t.forward(22 * scale)
     t.right(90)
     t.forward(6 * scale)
     t.right(90)
t.up()
t.forward(1 * scale)
t.right(90)
t.forward(5 * scale)
t.left(90)
t.down()
for k in range(9):
     t.forward(53 * scale)
     t.right(90)
     t.forward(75 * scale)
     t.right(90)
t.up()

for x in range(-40,60):
     for y in range(-40,60):
          t.goto(x * scale, y * scale)
          t.dot(3)
t.done()
"""
"""
s = '9' * 100
while '33333' in s or '999' in s:
     if '33333' in s:
          s = s.replace('33333','99',1)
     else:
          s = s.replace('999','3',1)
print(s)

"""
"""
for x in range(1,2030):
     a = 3**100 - x
     b = []
     while a > 0:
          b = [a%3] + b
          a = a//3
     if b.count(0) == 5:
          print(x)
"""
"""
from itertools import *

def f(x):
     P = 15<=x<=40
     Q = 21<=x<=63
     A = a1<=x<=a2
     return P <= ((Q and (not A)) <= (not P))

ox = [i/4 for i in range(10*4,65*4)]
m = []
for a1,a2 in combinations(ox,2):
     if all (f(x)==1 for x in ox):
          m.append(a2-a1)
print(min(m))
"""
"""
from sys import *

setrecursionlimit(2100)

def f(n):
     if n == 1:
          return 1
     if n > 1:
          return n * f(n-1)
print((2*f(2024)+f(2023))/f(2022))
"""
"""
def f(x,y):
     if x < y:
          return 0
     if x == y:
          return 1
     if x > y:
          return f(x-1,y)+f(x//2,y)
print(f(30,8)*f(8,1))
"""
#19.06.2024 17:20 (1962024)
"""
print('x,y,w,z')
for x in 0,1:
     for y in 0,1:
          for w in 0,1:
               for z in 0,1:
                    f = (y <=(not(x <= z))) or w
                    if f == 0:
                         print(x,y,w,z)
"""
"""
for n in range(1,100):
     b = bin(n) [2:]
     if b.count('1') % 2 == 0:
          b = '10' + b
     else:
          b = '1' + b + '01'
     r = int(b,2)
     if n < 12:
          print(n,r)
"""
"""
import turtle as t

t.tracer(0)
t.screensize(3500,3500,"white")
t.left(90)
scale = 10

for k in range(3):
     t.forward(7 * scale)
     t.right(90)
     t.forward(12 * scale)
     t.right(90)
t.up()
t.forward(4 * scale)
t.right(90)
t.forward(6 * scale)
t.left(90)
t.down()
for k in range(4):
     t.forward(83 * scale)
     t.right(90)
     t.forward(77 * scale)
     t.right(90)
t.up()

for x in range(-80,60):
     for y in range(-80,100):
          t.goto(x * scale, y * scale)
          t.dot(3, 'green')
t.done()
"""
"""
s = '8' * 83
while '111' in s or '88888' in s:
     if '111' in s:
          s = s.replace('111','88',1)
     else:
          s = s.replace('88888','8',1)
print(s)
"""
"""
from sys import *

setrecursionlimit(2100)

def f(n):
     if n == 1:
          return n
     if n > 1:
          return 2 * n * f(n-1)
print((f(2024)//16-f(2023))//f(2022))
"""
#20.06.2024 10:07 (20062024)
"""
for n in range(1,1000):
     b = bin(n) [2:]
     if b.count('0') % 2 != 0:
          b = '10' + b + '11'
     else:
          b = '1' + b + '00'
     r = int(b,2)
     if r > 1023:
          print(n,r)
          break
"""
"""
a = []
for n in range(1,1000):
     b = bin(n) [2:]
     if n % 2 != 0:
          b = '1' + b + '0'
     else:
          b = '11' + b + '11'
     r = int(b, 2)
     if r < 126:
          a.append(r)
print(max(a))
"""
"""
for n in range(1, 1000):
     b = bin(n) [2:]
     for k in range(3):
          q = b.count('1') - b.count('0')
          if (q < 0):
               b += '1'
          elif (q > 0):
               b += '0'
          else:
               b += b[-1]
     if n > 95 and int(b, 2) % 4 == 0:
          print(n)
          break
"""
"""
def f(n):
     if n < 10:
          return n
     if n >= 10:
          return f(g(n))

def g(n):
     if n < 10:
          return n
     if n >= 10:
          return n % 10 + g(n // 10)
print(f(12345678987654321))
"""
"""
from functools import lru_cache

@lru_cache(None)
def f(n):
     if n <= 3:
          return n + 3
     if n > 3 and f(n-1) % 2 == 0:
          return f(n-2) + n
     if n > 3 and f(n-1) % 2 != 0:
          return f(n-2) + 2*n

k = 0
for x in range(40,51):
     if f(x):
          k += f(x)
print(k)
"""
"""
def f(n):
     if n == 0:
          return 0
     if n > 0 and n % 2 == 0:
          return f(n//2) - 1
     if n > 0 and n % 2 != 0:
          return 2 + f(n-1)

k = 0
for x in range(1000):
     if f(x) == 3:
          k += 1
print(k)
"""
"""
from functools import lru_cache

@lru_cache(None)

def f(n):
     if n == 1:
          return 1
     if n > 1:
          return (2*n - 1) * f(n - 1)

for n in range(2,5000):
     f(n)
     
print(f(3516)//f(3513))
"""
"""
from functools import lru_cache

@lru_cache(None)

def f(n):
     if n == 1:
          return 1
     if n > 1:
          return n*f(n-1) + 1
for n in range(1,5000):
     f(n)
     
print(f(3303)//f(3300))
"""
"""
from functools import lru_cache

@lru_cache(None)

def f(n):
     if n == 1:
          return 1
     if n > 1:
          return n * f(n-1)

for n in range(1,5000):
     f(n)

print(f(446)//f(443))
"""
"""
from sys import *

setrecursionlimit(2100)

def f(n):
     if n == 1:
          return 1
     if n > 1:
          return n**2 + f(n-1)
print(f(2023)-f(2019))
"""
"""
print('x,y,w,z')
for x in 0,1:
     for y in 0,1:
          for w in 0,1:
               for z in 0,1:
                    f = (x or y) and (not(y==z)) and (not w)
                    if f == 1:
                         print(x,y,w,z)
"""
"""
print('x,y,w,z')
for x in 0,1:
     for y in 0,1:
          for w  in 0,1:
               for z in 0,1:
                    f = (not(y <=(x==w))) and (z<=x)
                    if f == 1:
                         print(x,y,w,z)
"""
"""
print('x,y,w,z')
for x in 0,1:
     for y in 0,1:
          for w in 0,1:
               for z in 0,1:
                    f = (not(y <= x)) or (z <= w) or (not z)
                    if f == 0:
                         print(x,y,w,z)
"""
"""
print('x,y,w,z')
for x in 0,1:
     for y in 0,1:
          for w in 0,1:
               for z in 0,1:
                    f = (not(x <= z)) or (y == w) or (not y)
                    if f == 0:
                         print(x,y,w,z)
"""
"""
print('a,b,c,d')
for a in 0,1:
     for b in 0,1:
          for c in 0,1:
               for d in 0,1:
                    f = ((not a) and (not b)) or (b ==c) or d
                    if f == 0:
                         print(a,b,c,d)
"""
#22.06.2024 17:19 (22062024)
print('x,y,w,z')
for x in 0,1:
     for y in 0,1:
          for w in 0,1:
               for z in 0,1:
                    f = (y <= x) or (not((x <= z) and (z <= x))) and (not w)
                    if f == 0:
                         print(x,y,w,z)
#23.06.2024 12:19 (23062024)
"""
def f(n):
  if n < 10:
    return n
  if n >= 10:
    return f(n % 10) + f(n // 10)
k = 0
for n in range(1, 2**63):
  if f(n) == 159:
    k += 1
print(k)
"""
"""
lst = []
for n in range(1,1500):
  b = bin(n) [2:]
  b = b + '0' if n % 2 == 0 else b + '1'
  b = b + '0' if b.count('1') % 2 == 0 else b + '1'
  r = int(b,2)
  if r > 2023:
    lst.append(r)
print(min(lst))
"""
"""
import turtle as t

t.tracer(0)
t.screensize(3500,3500,"white")
t.left(90)
scale = 50

for k in range(14):
     t.left(180)
     for k in range(3):
          t.forward(3 * scale)
          t.right(90)
t.up()
for x in range(-50,70):
     for y in range(-50,70):
          t.goto(x * scale, y * scale)
          t.dot(4, "orange")
t.done()
"""
"""
import turtle as t

t.tracer(0)
t.screensize(3500,3500,"white")
t.left(90)
scale = 75

for k in range(5):
     t.forward(8 * scale)
     t.right(120)
     for k in range(2):
          t.forward(4 * scale)
          t.right(60)
     t.forward(4 * scale)
     t.right(120)
t.up()
for x in range(-50,70):
     for y in range(-50,70):
          t.goto(x * scale, y * scale)
          t.dot(4, "orange")
t.done()
"""
"""
import turtle as t

t.tracer(0)
t.screensize(3500,3500,"white")
t.left(90)
scale = 10

for k in range(100):
     t.forward(10 * scale)
     t.right(30)
t.up()
for x in range(-50,70):
     for y in range(-50,70):
          t.goto(x * scale, y * scale)
          t.dot(3, "orange")
t.done()
"""
"""
import turtle as t

t.tracer(0)
t.screensize(3500,3500,"white")
t.left(90)
scale = 10

for k in range(100):
     t.forward(10 * scale)
     t.right(180)
     t.forward(10 * scale)
     t.right(190)
t.up()
for x in range(-50,70):
     for y in range(-50,70):
          t.goto(x * scale, y * scale)
          t.dot(3, "orange")
t.done()
"""
"""
import turtle as t

t.tracer(0)
t.screensize(3500,3500,"white")
t.left(90)
scale = 15

for k in range(10):
     t.right(90)
     for k in range(3):
          t.forward(10 * scale)
          t.right(90)
          t.forward(10 * scale)
          t.right(270)
t.up()
for x in range(-50,70):
     for y in range(-80,70):
          t.goto(x * scale, y * scale)
          t.dot(3, "orange")
t.done()
"""
import turtle as t

t.tracer(0)
t.screensize(3500,3500,"white")
t.left(90)
scale = 30

for k in range(151):
     t.forward(10 * scale)
     t.right(300)
     t.forward(20 * scale)
     t.right(300)
t.up()
for x in range(-50,70):
     for y in range(-80,70):
          t.goto(x * scale, y * scale)
          t.dot(3, "orange")
t.done()
#24.06.2024 15:55 (24062024)
"""
from itertools import product

k = 0

for i in product('0123456789aaaaa', repeat=5):
  s = ''.join(i)
  if s[0] != '0' and s.count('8') == 1 and s.count('a') >= 2:
    k += 1
print(k)
"""
"""
from sys import *

setrecursionlimit(2100)

def f(n):
  if n == 1:
    return 1
  if n > 1:
    return (n + 1) * f(n - 1) 
print((f(2024) - 3*f(2023))//f(2022))
"""
"""
print('x,y,w,z')
for x in 0,1:
     for y in 0,1:
          for w in 0,1:
               for z in 0,1:
                    f = ((x <= w) and ((not y) <= z)) <= ((z == x) or (w and (not y)))
                    if f == 0:
                         print(x,y,w,z)
"""
#25.06.2024 9:17 (25062024)
"""
import turtle as t

t.tracer(0)
t.screensize(3500,3500,"white")
t.left(90)
scale = 30

for k in range(3):
     t.forward (10 * scale)
     t.right(120)
t.up()
t.forward (10 * scale)
t.right(90)
t.forward (3 * scale)
t.down()
for k in range(4):
     t.forward (10 * scale)
     t.right(90)
t.up()

for x in range(-50,60):
     for y in range(-60,80):
          t.goto(x * scale, y * scale)
          t.dot(3, "orange")
t.done()
"""

"""
print('x,y,w,z')
for x in 0,1:
     for y in 0,1:
          for w in 0,1:
               for z in 0,1:
                    f = ((not x) and y and z and (not w)) \
                        or ((not x) and y and (not z) and (not w))\
                        or (x and y and z and (not w))
                    if f == 1:
                         print(x,y,w,z)
"""
"""
import turtle as t

t.tracer(0)
t.screensize(3500,3500,"white")
t.left(90)
scale = 20

for k in range(2):
     t.forward (10 * scale)
     t.right(90)
     t.forward(20 * scale)
     t.right(90)
t.up()
t.forward (5 * scale)
t.right(90)
t.forward(7 * scale)
t.left(90)
t.down()
for k in range(2):
     t.forward (20 * scale)
     t.right(90)
     t.forward (40 * scale)
     t.right(90)
t.up()

for x in range(-50,60):
     for y in range(-60,80):
          t.goto(x * scale, y * scale)
          t.dot(3, "orange")
t.done()
"""
"""
import turtle as t

t.tracer(0)
t.screensize(3500,3500,"white")
t.left(90)
scale = 20

t.left(140)
for k in range(23):
     t.right(230)
     t.forward(22 * scale)
     t.right(90)
     t.forward(23 * scale)
     t.right(220)
t.up()
t.left(40)
t.backward(10 * scale)
t.left(90)
t.backward(8 * scale)
t.down()
for k in range(24):
     t.forward(24 * scale)
     t.right(90)
     t.forward(90 * scale)
     t.right(90)
t.up()

for x in range(-60,90):
     for y in range(-60,90):
          t.goto(x * scale, y * scale)
          t.dot(3,"orange")
t.done()
"""
"""
import turtle as t

t.tracer(0)
t.screensize(3500,3500,"white")
t.left(90)
scale = 30

for k in range(2):
     t.left(120)
     t.down()
     for k in range(10):
          t.right(30)
          t.forward(4 * scale)
          t.right(60)
     t.up()
     t.left(150)
     t.backward(2 * scale)
     t.left(90)
     t.backward(2 * scale)
t.up()

for x in range(-60,90):
     for y in range(-60,90):
          t.goto(x * scale,y * scale)
          t.dot(3,"red")
t.done()
"""
"""
import turtle as t

t.tracer(0)
t.screensize(3500,3500,"white")
t.left(90)
scale = 20

for k in range(2):
     t.forward(10 * scale)
     t.right(90)
     t.forward(20 * scale)
     t.right(90)
t.up()
t.forward(3 * scale)
t.right(90)
t.forward(5 * scale)
t.left(90)
t.down()
for k in range(2):
     t.forward(70 * scale)
     t.right(90)
     t.forward(80 * scale)
     t.right(90)
t.up()

for x in range(-60,90):
     for y in range(-60, 90):
          t.goto(x * scale, y * scale)
          t.dot(3,"orange")
t.done()
"""
#26.06.2024 19:02 (26062024)
for n in range(1,1000):
     b = bin(n) [2:]
     if b.count('1') % 4 == 0:
          b = '10' + b + '0'
     else:
          b = '11' + b + '1'
     r = int(b,2)
     if r < 250:
          print(n)
#29.06.2024 19:59 (29062024)
"""
def f(n):
  divs = []
  for i in range(1, int(n**0.5) + 1):
    if n % i == 0:
      if (n // i) - i < 115:
        divs.append(n // i - i)
  return sorted(set(divs))
      
for i in range(2000000, 3000000+1):
  divs = f(i)
  if len(divs) >= 3:
    print(i)
"""

"""
def f(n):
  while n % 2 == 0:
    n //= 2
  divs = set()
  for i in range(2, int(n**0.5) + 1):
    if n % i == 0:
      if i % 2 != 0:
        divs.add(i)
        divs.add(n//i)
  return divs

for i in range(45000000, 50000000+1):
  divs = f(i)
  if len(divs) == 5:
    print(*sorted(divs))
"""
#30.06.2024 19:18 (30062024)
"""
print('a,b,c,d')
for a in 0,1:
     for b in 0,1:
          for c in 0,1:
               for d in 0,1:
                    f = (a <= b) and (c <= d) or (not c)
                    if f == 0:
                         print(a,b,c,d)
"""
"""
for n in range(1,1000):
  b = bin(n) [2:]
  if n % 2 == 0:
    b = '10' + b
  else:
    b = '1' + b + '01'
  r = int(b,2)
  if r > 516:
    print(n)
    break
"""
import turtle as t

t.tracer(0)
t.screensize(3500,3500,"white")
t.left(90)
scale = 20

for k in range(2):
     t.forward(21 * scale)
     t.right(90)
     t.forward(27 * scale)
     t.right(90)
t.up()
t.forward(9 * scale)
t.right(90)
t.forward(10 * scale)
t.left(90)
t.down()
for k in range(2):
     t.forward(86 * scale)
     t.right(90)
     t.forward(47 * scale)
     t.right(90)
t.up()
for x in range(-70,90):
     for y in range(-70,90):
          t.goto(x * scale, y * scale)
          t.dot(3, "orange")
t.done()
#24.06.2024 22:06 (2406202419)
def (x,step=0):
  if x >= 39 and step == 2:
    return True
  elif x < 39 and step < 2:
    if step % 2 == 0:
      return f(x+1,step+1) or f(x+3,step+1) or f(x*2,step+1)
    else:
      return f(x+1,step+1) and f(x+3,step+1) and f(x*2,step+1)
  else:
    return False

for s in range(1,38):
  if f(s):
    print(s)
    break
#23.04.2024 18:54 (ARINA)
used=[]
k=0
for x1 in 'ARINA':
  for x2 in 'ARINA':
    for x3 in 'ARINA':
      for x4 in 'ARINA':
        for x5 in 'ARINA':
             s=x1+x2+x3+x4+x5
             if s.count('A') == 2 \
                and s.count('R') == 1 \
                and s.count('I') == 1 \
                and s.count('N') == 1 \
                and s.count('AA') == 0 \
                     and s not in used:
                  k=k+1
                  used.append(s)  
print(k)
#23.04.2024 19:41 (Arkadii)
import itertools
alphabet = "ВЕРЕТЕНО"
ar = itertools.product(alphabet, repeat=6) #Размещение с повторением
arl = []
for i in ar:
    arl.append(list(i))
count = 0
for e in arl:
    if e.count("В") != 1:
        count += 1
print(count)
#25.01.2024 22:45 (Calculator)
print(60//8)
#01.07.2024 11:16 (Fix01072024)
"""
k = []
for x in '0123456789ABCDF':
     a = int('97968' + x + '13', 15) + int('7' + x + '213', 15)
     if a % 14 == 0:
          k.append(a)
     if k:
          print(min(k) // 14)
"""
"""
from sys import *

setrecursionlimit (200000)

def f(n):
     if n > 100000:
          return n
     if n <= 100000:
          return f(n+1) + 5*n + 2
print(f(3)-f(7))
"""
"""
def f(x,y,step=0):
     if (x+y) >= 259 and step == 2:
          return True
     elif (x+y) < 259 and step < 2:
          if step % 2 == 0:
               return f(x+1,y,step+1) or f(x*2,y,step+1) or f(x,y+1,step+1) or f(x,y*2,step+1)
          else:
               return f(x+1,y,step+1) and f(x*2,y,step+1) and f(x,y+1,step+1) and f(x,y*2,step+1)
     else:
          return False
for s in range(1,241):
     if f(17,s):
          print(s)
          break
"""
"""
def f(x,y,step=0):
     if (x+y) >= 259 and step == 3:
          return True
     elif (x+y) < 259 and step < 3:
          if step % 2 == 0:
               return f(x+1,y,step+1) or f(x*2,y,step+1) or f(x,y+1,step+1) or f(x,y*2,step+1)
          else:
               return f(x+1,y,step+1) and f(x*2,y,step+1) and f(x,y+1,step+1) and f(x,y*2,step+1)
     else:
          return False
for s in range(1,241):
     if f(17,s):
          print(s)
"""
"""
def f(x,y,step=0):
     if (x+y) >= 259 and step in {2,4}:
          return True
     elif (x+y) < 259 and step < 4:
          if step % 2 != 0:
               return f(x+1,y,step+1) or f(x*2,y,step+1) or f(x,y+1,step+1) or f(x,y*2,step+1)
          else:
               return f(x+1,y,step+1) and f(x*2,y,step+1) and f(x,y+1,step+1) and f(x,y*2,step+1)
     else:
          return False
for s in range(1,241):
     if f(17,s):
          print(s)
          break
"""
"""
s = '1' * 50 + '2' * 50 + '3' * 50
while '21' in s or '31' in s or '23' in s:
     if '21' in s:
          s = s.replace('21','12',1)
     if '31' in s:
          s = s.replace('31','13',1)
     if '23' in s:
          s = s.replace('23','32',1)
print(s[9] + s[89] + s[129])
"""
#11.06.2024 19:44 (Forthevideo)
import turtle as t

t.tracer(0)
t.screensize(3500,3500,"white")
t.left(90)
t.speed(300)
scale = 50

t.left(60)
for k in range(8):
     t.forward(6 * scale)
     t.left(60)
     t.forward(6 * scale)
     t.left(120)
t.up()

for x in range(-20,50):
     for y in range(-10,40):
          t.goto(x * scale, y * scale)
          t.dot(3)
t.done()
#02.07.2024 19:42 (HARD)
"""
a == b or b <= c
"""
"""
print('a,b,c')
for a in 0,1:
     for b in 0,1:
          for c in 0,1:
               f = a == b or b <= c
               if f == 1:
                    print(a,b,c)
"""

"""
Алгоритм получает на вход натуральное число N > 1 и строит по нему новое число R следующим образом:

1 Вычисляется сумма чётных цифр в десятичной записи числа N. Если чётных цифр в записи нет, сумма считается равной нулю.

2 Вычисляется сумма цифр, стоящих на чётных местах в десятичной записи числа N без ведущих нулей. Места отсчитываются слева направо (от старших разрядов к младшим, начиная с единицы). Если число однозначное (цифр на чётных местах нет), сумма считается равной нулю.

3 Результатом работы алгоритма становится модуль разности полученных двух сумм.

При каком наименьшем N в результате работы алгоритма получится R = 9?
"""

"""
for n in range(1,100):
     k1 = k2 = 0
     d = str(n)
     d = [int(c) for c in d]
     k1 = sum(c for c in d if c%2==0)
     for i in range(len(d)):
          if (i+1)%2==0:
               k2 += d[i]
     r = abs(k2-k1)
     if r == 9:
          print(n)
          break
"""
def f(x,y):
     if x < y or x == 9 or x == 16:
          return 0
     if x == y:
          return 1
     return f(x-1,y) + f(x-2,y) + f(x//3, y)
print(f(19,3))
#07.04.2024 21:32 (IP)
from ipaddress import *

for mask in range(32):
     net = ip_network(f'111.24.160.159/{mask}',0)
     if (str(net.network_address)) == '111.24.160.128':
          print(mask)
#26.04.2024 12:09 (Task EGE April)
#Номер 23
#def f(x,y):
#if x == y:
#return 1
#if x > y:
#return 0
#return f(x + 1,y) + f(x * 2,y)
#print(f(3,6)*f(6,12)*f(12,16))

#Номер 25: Среди натуральных чисел, не превышающих 10**10,найдите все числа,
#соответствующие маске 10*2024?, делящиеся на 2024 без остатка.

#from fnmatch import *
#for x in range(0, 10**10, 2024):
# Перебираем все числа от 0 с шагом 2024, будут получены числа кратные 2024
#if fnmatch(str(x), '10*2024?'):
# Проверяем полученное число соответствию заданию
#print(x, x // 2024)
#Номер 2
"""
n k l m
1 0 0 1
1 0 1 0
1 1 0 1



m l k n

0 1 0 1
1 0 0 1
1 0 1 1
"""
# print('n k l m')
# for n in 0,1:
#      for k in 0,1:
#           for l in 0,1:
#               for m in 0,1:
#                    f = (not(n)) or k and (not (m)) or (l == m)
#                    if f == 0:
#                         print(n,k,l,m)
#Номер 14
#for x in '0123456789abcdefghijklmnopqrstuvwxyz'[:29]:
#a = int(f'42{x}158',29) +  int(f'16{x}234',29)
#if a % 28 == 0:
#print(x, a//28)

#Номер 8
#counter = 0
#alph =
#Номер 12
#s = '7' * 47
#while '2222' in s or '7777' in s:
#if '2222' in s:
#s = s.replace('2222','77',1)
#else:
#s = s.replace('7777','22',1)
#print(s)
#Номер 6
"""
Повтори 2 [Вперёд 12 Направо 90 Вперёд 19 Направо 90]
Поднять хвост
Вперёд 4 Направо 90 Вперёд 6 Налево 90
Опустить хвост
Повтори 2 [Вперёд 12 Направо 90 Вперёд 6 Направо 90]
"""
# import turtle as t
# t.screensize(3500,3500,"white") #экран
# t.left(0) #поворот фигуры
# t.speed(300) #скорость
# scale = 10 #размер
# t.down()

# for y in range(2): #Повторы
#     t.forward(12 * scale) #размер фигуры
#     t.right(90)
#     t.forward(19 * scale)
#     t.right(90)
# t.up()
# t.forward(4 * scale) #размер фигуры
# t.right(90)
# t.forward(6 * scale)
# t.left(90)
# t.down()
# for y in range(2): #Повторы
#     t.forward(12 * scale) #размер фигуры
#     t.right(90)
#     t.forward(6 * scale)
#     t.right(90)

# t.up()
# t.color("green")
# for i in range(4,15): #x 
#     for j in range(-15,0): #y and
#         t.goto(i * scale, j * scale)
#         t.dot(3)
# t.done()
"""
Номер 5
На вход алгоритма подаётся натуральное число N. Алгоритм строит по
нему новое число R:
1. Строится двоичная запись числа N.
2. Далее эта запись обрабатывается по такому правилу:
    • если число N чётно, к этой записи слева и справа
приписывается единица
    • если число N нечётно, справа приписывается «10»
Таким образом получается двоичная запись искомого числа R.
3. Результат переводится в десятичную систему и выводится на экран.
Например, для исходного числа 12 = 1100_2 результат - число
111001_2 = 57, а для исходного числа 5 = 101_2 результат - число
10110_2 = 22.
Укажите минимальное число N, после обработки которого с помощью
этого алгоритма получается число R, которое больше 179. В ответе
запишите это число в десятичной системе счисления.
"""
# for n in range(1, 100):
#   b = bin(n)[2:]
#   print(n, b, end=" ")  #проверка исходного числа
#   if n % 2 == 0:
#     b = '1' + b + '1'
#   else:
#     b = b + '10'
#   print(b, end=" ")  #проверка исходного числа; end = " " - перенос на следующую строку
#   r = int(b, 2)
#   print(r)
#   if r > 179:
#     print(n)
#     break
"""
Все пятибуквенные слова, в составе которых могут быть только буквы Ш, А, Т, Ё, Р, записаны в алфавитном порядке и пронумерованы. Вот начало списка:

ААААА
ААААЁ
ААААР
ААААТ
ААААШ
АААЁА

АЁРЁР
01212
ЁАЁРЁ
10121
Под каким номером в списке идёт первое слово, которое содержит не более одной буквы А и не содержит букв Ё, стоящих рядом?
"""
"""
Номер 8
from itertools import product
alph = sorted("ШАТЕР")
print(alph)
for i, seq in enumerate(product(alph, repeat=5), start=1):
    string = "".join(seq)
    if string.count("А") <= 1 and "ЕЕ" not in string:
      print(i,string)
      break
"""
#Ё - спец. символ, его нет в алфавите
"""
Номер 13
from ipaddress import *
net = ip_network('114.179.203.128/255.255.255.192')
k = 0
for ip in net:
     b = f'{int(ip):032b}'
     if b.count('1')%3==0:
          k += 1
print(k)
"""
#Номер 15
"""
from itertools import *

def f(x):
     B = 74 <= x <= 194
     C = 152 <= x <= 223
     A = a1 <= x <= a2
     return ((not A) and B) <= (not C)

ox = [i/4 for i in range(70*4,225*4)]
m = []
for a1,a2 in combinations(ox,2):
     if all(f(x)==1 for x in ox):
          m.append(a2-a1)
print(min(m))
"""
#Номер 16
"""
from sys import *
setrecursionlimit(300)

def f(n):
     if n <= 12: #Ошибка в коде, однако зависит от самой программного обеспечения
          return 1
     else:
          return f(n-1)+n-2
print(f(2024)-f(2020))
"""
#04.06.2024 0:16 (XTM12)
s = '2' * 52
while '222' in s or '000' in s:
     if '000' in s:
          s = s.replace('000','2',1)
     else:
          s = s.replace('222','02',1)
print(s)
#23.04.2024 21:51 (Yandex)
#print('nkml')
#for n in 0,1:
     #for k in 0,1:
          #for m in 0,1:
              # for l in 0,1:
                   # f = (not n) or k and (not m) or (l == m)
                    #if f == 0:
                        # print(n,k,m,l)
s = '7' * 47
while '2222' in s or '7777' in s:
     if '2222' in s:
          s = s.replace('2222','77',1)
     else:
          s = s.replace('7777','22',1)
print(s)
#24.04.2024 21:11 (Баллы)
while True:
    s = int(input('Сколько первичных баллов ты планируешь набрать? \n'))
    if 1 <= s <= 29:
        tab = [7, 14, 20, 27, 34, 40, 43, 46, 48, 51,
               54, 56, 59, 62, 64, 67, 70, 72, 75, 78,
               80, 83, 85, 88, 90, 93, 95, 98, 100]
        print(f'Ты получишь: {tab[s - 1]} баллов! \n')
    else:
        print('Выход из программы.')
        exit()
#23.06.2024 14:38 (пример)
def f(x, y, h):
    if (h == 3 or h == 5) and x + y >= 59:
        return 1
    elif h == 5 and x + y < 59:
        return 0
    elif x + y >= 59 and h < 5:
        return 0
    else:
        if h % 2 == 0:
            return f(x + 1, y, h + 1) or f(x, y + 1, h + 1) or f(x * 2, y, h + 1) or f(x, y * 2, h + 1)  # стратегия победителя
        else:
            return f(x + 1, y, h + 1) and f(x, y + 1, h + 1) and f(x * 2, y, h + 1) and f(x, y * 2, h + 1)  # стратегия проигравшего(любой ход)
 
def f1(x, y, h):
    if h == 3 and x + y >= 59:
        return 1
    elif h == 3 and x + y < 59:
        return 0
    elif x + y >= 59 and h < 3:
        return 0
    else:
        if h % 2 == 0:
            return f1(x + 1, y, h + 1) or f1(x, y + 1, h + 1) or f1(x * 2, y, h + 1) or f1(x, y * 2, h + 1)  # стратегия победителя
        else:
            return f1(x + 1, y, h + 1) and f1(x, y + 1, h + 1) and f1(x * 2, y, h + 1) and f1(x, y * 2, h + 1)  # стратегия проигравшего(любой ход)
 
for x in range(1, 54):
    if f(x, 5, 1) == 1:
        print(x)
print("====")
for x in range(1, 54):
    if f1(x, 5, 1) == 1:
        print(x)
#02.04.2024 21:35 (тест)
print("\033[31m","warning"],"\033[0m","this is dangerous"])
          


          
 

          


          
 

     



     





     


     
     
     



     





     

          


          
 

          

          




                         

